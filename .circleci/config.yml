# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/tmp

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - run:
          name: Clone and Build RSKj
          command: |
                    GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa_fingerprint'
                    git clone git@github.com:rsksmart/rskj.git ~/rsksmart/rskj
                    cd ~/rsksmart/rskj/
                    ./configure.sh
                    ./gradlew clean build -x test
      
      # Download and cache dependencies
      - restore_cache: 
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run:
          name: Start RSKj & Run JMeter
          command: |
                      java -Dminer.client.autoMine=true -Drpc.providers.web.ws.enabled=true -cp ~/rsksmart/rskj/rskj-core/build/libs/rskj-core-2.0.0-SNAPSHOT-all.jar co.rsk.Start --regtest  nohup &               
                      until nc -z 127.0.0.1 4444
                      do
                        echo "Waiting for RskJ..."
                        sleep 1
                      done
                      mvn verify


      - store_artifacts:
          path: /home/circleci/tmp/target/jmeter/reports
          destination: ~/tmp/Results
          
      - store_artifacts:
          path: target/jmeter/results
          destination: ~/tmp/Results
          
      - store_test_results:
          path: ~/tmp/Results

          

workflows:
    commit:
        jobs:
            - build
    daily:
        triggers:
            - schedule:
                cron: "22 01 * * *"
                filters:
                    branches:
                        only:
                            - master
        jobs:
            - build
